/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screen3_screen/Screen3ViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

Screen3ViewBase::Screen3ViewBase() :
    flexButtonCallback(this, &Screen3ViewBase::flexButtonCallbackHandler),
    sliderValueChangedCallback(this, &Screen3ViewBase::sliderValueChangedCallbackHandler)
{
    __background.setPosition(0, 0, 480, 320);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    scalableImage1.setBitmap(touchgfx::Bitmap(BITMAP_GLASS_THEME_IMAGES_BACKGROUNDS_480X480_FLOATING_RINGS_ID));
    scalableImage1.setPosition(-42, 0, 522, 320);
    scalableImage1.setScalingAlgorithm(touchgfx::ScalableImage::BILINEAR_INTERPOLATION);
    add(scalableImage1);

    midSlider.setXY(228, 48);
    midSlider.setBitmaps(touchgfx::Bitmap(BITMAP_GLASS_THEME_IMAGES_WIDGETS_SLIDER_VERTICAL_THIN_TRACK_SMALL_ID), touchgfx::Bitmap(BITMAP_LIGHT_THEME_IMAGES_WIDGETS_LINEPROGRESS_FILLERS_PLAIN_THIN_SMALL_ACTION_90_ID), touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_SLIDER_VERTICAL_THIN_ROUNDED_ACTIVE_ID));
    midSlider.setupVerticalSlider(9, 12, 0, 0, 200);
    midSlider.setValueRange(-12, 12);
    midSlider.setValue(0);
    midSlider.setNewValueCallback(sliderValueChangedCallback);
    add(midSlider);

    lowSlider.setXY(128, 48);
    lowSlider.setBitmaps(touchgfx::Bitmap(BITMAP_GLASS_THEME_IMAGES_WIDGETS_SLIDER_VERTICAL_THIN_TRACK_SMALL_ID), touchgfx::Bitmap(BITMAP_LIGHT_THEME_IMAGES_WIDGETS_LINEPROGRESS_FILLERS_PLAIN_THIN_SMALL_ACTION_90_ID), touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_SLIDER_VERTICAL_THIN_ROUNDED_ACTIVE_ID));
    lowSlider.setupVerticalSlider(9, 12, 0, 0, 200);
    lowSlider.setValueRange(-12, 12);
    lowSlider.setValue(0);
    lowSlider.setNewValueCallback(sliderValueChangedCallback);
    add(lowSlider);

    highSlider.setXY(328, 48);
    highSlider.setBitmaps(touchgfx::Bitmap(BITMAP_GLASS_THEME_IMAGES_WIDGETS_SLIDER_VERTICAL_THIN_TRACK_SMALL_ID), touchgfx::Bitmap(BITMAP_LIGHT_THEME_IMAGES_WIDGETS_LINEPROGRESS_FILLERS_PLAIN_THIN_SMALL_ACTION_90_ID), touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_SLIDER_VERTICAL_THIN_ROUNDED_ACTIVE_ID));
    highSlider.setupVerticalSlider(9, 12, 0, 0, 200);
    highSlider.setValueRange(-12, 12);
    highSlider.setValue(0);
    highSlider.setNewValueCallback(sliderValueChangedCallback);
    add(highSlider);

    previousScreenButton.setIconBitmaps(Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_ARROW_BACK_IOS_50_50_FF14DC_SVG_ID), Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_ARROW_BACK_IOS_50_50_FF14DC_SVG_ID));
    previousScreenButton.setIconXY(17, 24);
    previousScreenButton.setAction(flexButtonCallback);
    previousScreenButton.setPosition(0, 112, 64, 97);
    add(previousScreenButton);

    previousScreenText.setXY(64, 113);
    previousScreenText.setColor(touchgfx::Color::getColorFromRGB(255, 20, 220));
    previousScreenText.setLinespacing(0);
    previousScreenText.setRotation(touchgfx::TEXT_ROTATE_90);
    previousScreenText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_4X98));
    add(previousScreenText);

    dTimeText.setXY(201, 148);
    dTimeText.setColor(touchgfx::Color::getColorFromRGB(255, 20, 220));
    dTimeText.setLinespacing(0);
    dTimeText.setRotation(touchgfx::TEXT_ROTATE_270);
    dTimeText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_CB86));
    add(dTimeText);

    dTimeText_2.setXY(99, 147);
    dTimeText_2.setColor(touchgfx::Color::getColorFromRGB(255, 20, 220));
    dTimeText_2.setLinespacing(0);
    dTimeText_2.setRotation(touchgfx::TEXT_ROTATE_270);
    dTimeText_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_7GDA));
    add(dTimeText_2);

    dTimeText_1.setXY(299, 143);
    dTimeText_1.setColor(touchgfx::Color::getColorFromRGB(255, 20, 220));
    dTimeText_1.setLinespacing(0);
    dTimeText_1.setRotation(touchgfx::TEXT_ROTATE_270);
    dTimeText_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UZTL));
    add(dTimeText_1);

    dbText1.setXY(117, 30);
    dbText1.setColor(touchgfx::Color::getColorFromRGB(255, 20, 220));
    dbText1.setLinespacing(0);
    dbText1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UJA2));
    add(dbText1);

    dbText1_2.setXY(219, 30);
    dbText1_2.setColor(touchgfx::Color::getColorFromRGB(255, 20, 220));
    dbText1_2.setLinespacing(0);
    dbText1_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_J1RN));
    add(dbText1_2);

    dbText1_2_1.setXY(317, 30);
    dbText1_2_1.setColor(touchgfx::Color::getColorFromRGB(255, 20, 220));
    dbText1_2_1.setLinespacing(0);
    dbText1_2_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_MGJY));
    add(dbText1_2_1);

    dbText1_1.setXY(117, 272);
    dbText1_1.setColor(touchgfx::Color::getColorFromRGB(255, 20, 220));
    dbText1_1.setLinespacing(0);
    dbText1_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_NNLG));
    add(dbText1_1);

    dbText1_1_1.setXY(217, 272);
    dbText1_1_1.setColor(touchgfx::Color::getColorFromRGB(255, 20, 220));
    dbText1_1_1.setLinespacing(0);
    dbText1_1_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_6VBQ));
    add(dbText1_1_1);

    dbText1_1_1_1.setXY(317, 272);
    dbText1_1_1_1.setColor(touchgfx::Color::getColorFromRGB(255, 20, 220));
    dbText1_1_1_1.setLinespacing(0);
    dbText1_1_1_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UHH8));
    add(dbText1_1_1_1);
}

Screen3ViewBase::~Screen3ViewBase()
{

}

void Screen3ViewBase::setupScreen()
{
    lowSlider.setValue(screen3State.getLowSliderValue());
    midSlider.setValue(screen3State.getMidSliderValue());
    highSlider.setValue(screen3State.getHighSliderValue());
}

void Screen3ViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &previousScreenButton)
    {
        //ChangeToScreen2
        //When previousScreenButton clicked change screen to Screen2
        //Go to Screen2 with screen transition towards East
        application().gotoScreen2ScreenWipeTransitionEast();
    }
}

void Screen3ViewBase::sliderValueChangedCallbackHandler(const touchgfx::Slider& src, int value)
{
    if (&src == &lowSlider)
    {
        //AdjustLowGain
        //When lowSlider value changed execute C++ code
        //Execute C++ code
        updateGainLowShelf(&equalizerFX, std::pow(10.f, (float)value / 20.f));
        screen3State.setLowSliderValue(value);
    }
    if (&src == &midSlider)
    {
        //AdjustMidGain
        //When midSlider value changed execute C++ code
        //Execute C++ code
        updateGainPeaking(&equalizerFX, std::pow(10.f, (float)value / 20.f));
        screen3State.setMidSliderValue(value);
    }
    if (&src == &highSlider)
    {
        //AdjustHighGain
        //When highSlider value changed execute C++ code
        //Execute C++ code
        updateGainHighShelf(&equalizerFX, std::pow(10.f, (float)value / 20.f));
        screen3State.setHighSliderValue(value);
    }
}
