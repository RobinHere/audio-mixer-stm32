/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screen5_screen/Screen5ViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

Screen5ViewBase::Screen5ViewBase() :
    sliderValueChangedCallback(this, &Screen5ViewBase::sliderValueChangedCallbackHandler),
    flexButtonCallback(this, &Screen5ViewBase::flexButtonCallbackHandler)
{
    __background.setPosition(0, 0, 480, 320);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    scalableImage1.setBitmap(touchgfx::Bitmap(BITMAP_GLASS_THEME_IMAGES_BACKGROUNDS_480X480_FLOATING_RINGS_ID));
    scalableImage1.setPosition(-42, 0, 522, 320);
    scalableImage1.setScalingAlgorithm(touchgfx::ScalableImage::BILINEAR_INTERPOLATION);
    add(scalableImage1);

    inL1Slider.setXY(135, 48);
    inL1Slider.setBitmaps(touchgfx::Bitmap(BITMAP_GLASS_THEME_IMAGES_WIDGETS_SLIDER_VERTICAL_THIN_TRACK_SMALL_ID), touchgfx::Bitmap(BITMAP_LIGHT_THEME_IMAGES_WIDGETS_LINEPROGRESS_FILLERS_PLAIN_THIN_SMALL_ACTION_90_ID), touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_SLIDER_HORIZONTAL_THIN_ROUNDED_ACTIVE_ID));
    inL1Slider.setupVerticalSlider(9, 12, 0, 0, 200);
    inL1Slider.setValueRange(0, 20);
    inL1Slider.setValue(10);
    inL1Slider.setNewValueCallback(sliderValueChangedCallback);
    add(inL1Slider);

    inR1Slider.setXY(205, 48);
    inR1Slider.setBitmaps(touchgfx::Bitmap(BITMAP_GLASS_THEME_IMAGES_WIDGETS_SLIDER_VERTICAL_THIN_TRACK_SMALL_ID), touchgfx::Bitmap(BITMAP_LIGHT_THEME_IMAGES_WIDGETS_LINEPROGRESS_FILLERS_PLAIN_THIN_SMALL_ACTION_90_ID), touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_SLIDER_VERTICAL_THIN_ROUNDED_ACTIVE_ID));
    inR1Slider.setupVerticalSlider(9, 12, 0, 0, 200);
    inR1Slider.setValueRange(0, 20);
    inR1Slider.setValue(10);
    inR1Slider.setNewValueCallback(sliderValueChangedCallback);
    add(inR1Slider);

    inL2Slider.setXY(275, 48);
    inL2Slider.setBitmaps(touchgfx::Bitmap(BITMAP_GLASS_THEME_IMAGES_WIDGETS_SLIDER_VERTICAL_THIN_TRACK_SMALL_ID), touchgfx::Bitmap(BITMAP_LIGHT_THEME_IMAGES_WIDGETS_LINEPROGRESS_FILLERS_PLAIN_THIN_SMALL_ACTION_90_ID), touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_SLIDER_VERTICAL_THIN_ROUNDED_ACTIVE_ID));
    inL2Slider.setupVerticalSlider(9, 12, 0, 0, 200);
    inL2Slider.setValueRange(0, 20);
    inL2Slider.setValue(10);
    inL2Slider.setNewValueCallback(sliderValueChangedCallback);
    add(inL2Slider);

    inR2Slider.setXY(345, 48);
    inR2Slider.setBitmaps(touchgfx::Bitmap(BITMAP_GLASS_THEME_IMAGES_WIDGETS_SLIDER_VERTICAL_THIN_TRACK_SMALL_ID), touchgfx::Bitmap(BITMAP_LIGHT_THEME_IMAGES_WIDGETS_LINEPROGRESS_FILLERS_PLAIN_THIN_SMALL_ACTION_90_ID), touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_SLIDER_VERTICAL_THIN_ROUNDED_ACTIVE_ID));
    inR2Slider.setupVerticalSlider(9, 12, 0, 0, 200);
    inR2Slider.setValueRange(0, 20);
    inR2Slider.setValue(10);
    inR2Slider.setNewValueCallback(sliderValueChangedCallback);
    add(inR2Slider);

    inL1GainText.setXY(106, 102);
    inL1GainText.setColor(touchgfx::Color::getColorFromRGB(255, 20, 220));
    inL1GainText.setLinespacing(0);
    inL1GainText.setRotation(touchgfx::TEXT_ROTATE_270);
    inL1GainText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_YI1A));
    add(inL1GainText);

    inR1GainText.setXY(176, 102);
    inR1GainText.setColor(touchgfx::Color::getColorFromRGB(255, 20, 220));
    inR1GainText.setLinespacing(0);
    inR1GainText.setRotation(touchgfx::TEXT_ROTATE_270);
    inR1GainText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_JSOX));
    add(inR1GainText);

    inL2GainText.setXY(246, 102);
    inL2GainText.setColor(touchgfx::Color::getColorFromRGB(255, 20, 220));
    inL2GainText.setLinespacing(0);
    inL2GainText.setRotation(touchgfx::TEXT_ROTATE_270);
    inL2GainText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_GXKG));
    add(inL2GainText);

    inR2GainText.setXY(316, 102);
    inR2GainText.setColor(touchgfx::Color::getColorFromRGB(255, 20, 220));
    inR2GainText.setLinespacing(0);
    inR2GainText.setRotation(touchgfx::TEXT_ROTATE_270);
    inR2GainText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_95HO));
    add(inR2GainText);

    previousScreenText.setXY(64, 126);
    previousScreenText.setColor(touchgfx::Color::getColorFromRGB(255, 20, 220));
    previousScreenText.setLinespacing(0);
    previousScreenText.setRotation(touchgfx::TEXT_ROTATE_90);
    previousScreenText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ENUA));
    add(previousScreenText);

    rightText.setXY(352, 30);
    rightText.setColor(touchgfx::Color::getColorFromRGB(255, 20, 220));
    rightText.setLinespacing(0);
    rightText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ZQGD));
    add(rightText);

    rightText_1.setXY(282, 30);
    rightText_1.setColor(touchgfx::Color::getColorFromRGB(255, 20, 220));
    rightText_1.setLinespacing(0);
    rightText_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0FFR));
    add(rightText_1);

    rightText_1_1.setXY(212, 30);
    rightText_1_1.setColor(touchgfx::Color::getColorFromRGB(255, 20, 220));
    rightText_1_1.setLinespacing(0);
    rightText_1_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Y3W5));
    add(rightText_1_1);

    rightText_1_1_1.setXY(142, 30);
    rightText_1_1_1.setColor(touchgfx::Color::getColorFromRGB(255, 20, 220));
    rightText_1_1_1.setLinespacing(0);
    rightText_1_1_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_LIZF));
    add(rightText_1_1_1);

    leftText.setXY(353, 272);
    leftText.setColor(touchgfx::Color::getColorFromRGB(255, 20, 220));
    leftText.setLinespacing(0);
    leftText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_YH4I));
    add(leftText);

    leftText_1.setXY(283, 272);
    leftText_1.setColor(touchgfx::Color::getColorFromRGB(255, 20, 220));
    leftText_1.setLinespacing(0);
    leftText_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_6ND7));
    add(leftText_1);

    leftText_1_1.setXY(213, 272);
    leftText_1_1.setColor(touchgfx::Color::getColorFromRGB(255, 20, 220));
    leftText_1_1.setLinespacing(0);
    leftText_1_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_MANS));
    add(leftText_1_1);

    leftText_1_1_1.setXY(143, 272);
    leftText_1_1_1.setColor(touchgfx::Color::getColorFromRGB(255, 20, 220));
    leftText_1_1_1.setLinespacing(0);
    leftText_1_1_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_N826));
    add(leftText_1_1_1);

    previousScreenButton.setIconBitmaps(Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_ARROW_BACK_IOS_50_50_FF14DC_SVG_ID), Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_ARROW_BACK_IOS_50_50_FF14DC_SVG_ID));
    previousScreenButton.setIconXY(17, 24);
    previousScreenButton.setAction(flexButtonCallback);
    previousScreenButton.setPosition(0, 112, 64, 97);
    add(previousScreenButton);
}

Screen5ViewBase::~Screen5ViewBase()
{

}

void Screen5ViewBase::setupScreen()
{
    inL1Slider.setValue(screen5State.getInL1SliderValue());
    inR1Slider.setValue(screen5State.getInR1SliderValue());
    inL2Slider.setValue(screen5State.getInL2SliderValue());
    inR2Slider.setValue(screen5State.getInR2SliderValue());
}

void Screen5ViewBase::sliderValueChangedCallbackHandler(const touchgfx::Slider& src, int value)
{
    if (&src == &inL1Slider)
    {
        //AdjustInL1PanVariable
        //When inL1Slider value changed execute C++ code
        //Execute C++ code
        UpdatePanFromSlider(PAN_CH1L, (float)value / 10.0f);
        screen5State.setInL1SliderValue(value);
    }
    if (&src == &inR1Slider)
    {
        //AdjustInR1PanVariable
        //When inR1Slider value changed execute C++ code
        //Execute C++ code
        UpdatePanFromSlider(PAN_CH1R, (float)value / 10.0f);
        screen5State.setInR1SliderValue(value);
    }
    if (&src == &inL2Slider)
    {
        //AdjustInL2PanVariable
        //When inL2Slider value changed execute C++ code
        //Execute C++ code
        UpdatePanFromSlider(PAN_CH2L, (float)value / 10.0f);
        screen5State.setInL2SliderValue(value);
    }
    if (&src == &inR2Slider)
    {
        //AdjustInR2PanVariable
        //When inR2Slider value changed execute C++ code
        //Execute C++ code
        UpdatePanFromSlider(PAN_CH2R, (float)value / 10.0f);
        screen5State.setInR2SliderValue(value);
    }
}

void Screen5ViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &previousScreenButton)
    {
        //ChangeToScreen4
        //When previousScreenButton clicked change screen to Screen4
        //Go to Screen4 with screen transition towards West
        application().gotoScreen4ScreenWipeTransitionWest();
    }
}
