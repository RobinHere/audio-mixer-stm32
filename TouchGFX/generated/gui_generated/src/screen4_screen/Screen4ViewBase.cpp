/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screen4_screen/Screen4ViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

Screen4ViewBase::Screen4ViewBase() :
    sliderValueChangedCallback(this, &Screen4ViewBase::sliderValueChangedCallbackHandler),
    flexButtonCallback(this, &Screen4ViewBase::flexButtonCallbackHandler)
{
    __background.setPosition(0, 0, 480, 320);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    scalableImage1.setBitmap(touchgfx::Bitmap(BITMAP_GLASS_THEME_IMAGES_BACKGROUNDS_480X480_FLOATING_RINGS_ID));
    scalableImage1.setPosition(-42, 0, 522, 320);
    scalableImage1.setScalingAlgorithm(touchgfx::ScalableImage::BILINEAR_INTERPOLATION);
    add(scalableImage1);

    inL1Slider.setXY(135, 48);
    inL1Slider.setBitmaps(touchgfx::Bitmap(BITMAP_GLASS_THEME_IMAGES_WIDGETS_SLIDER_VERTICAL_THIN_TRACK_SMALL_ID), touchgfx::Bitmap(BITMAP_LIGHT_THEME_IMAGES_WIDGETS_LINEPROGRESS_FILLERS_PLAIN_THIN_SMALL_ACTION_90_ID), touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_SLIDER_HORIZONTAL_THIN_ROUNDED_ACTIVE_ID));
    inL1Slider.setupVerticalSlider(9, 12, 0, 0, 200);
    inL1Slider.setValueRange(0, 40);
    inL1Slider.setValue(0);
    inL1Slider.setNewValueCallback(sliderValueChangedCallback);
    add(inL1Slider);

    inR1Slider.setXY(205, 48);
    inR1Slider.setBitmaps(touchgfx::Bitmap(BITMAP_GLASS_THEME_IMAGES_WIDGETS_SLIDER_VERTICAL_THIN_TRACK_SMALL_ID), touchgfx::Bitmap(BITMAP_LIGHT_THEME_IMAGES_WIDGETS_LINEPROGRESS_FILLERS_PLAIN_THIN_SMALL_ACTION_90_ID), touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_SLIDER_VERTICAL_THIN_ROUNDED_ACTIVE_ID));
    inR1Slider.setupVerticalSlider(9, 12, 0, 0, 200);
    inR1Slider.setValueRange(0, 40);
    inR1Slider.setValue(0);
    inR1Slider.setNewValueCallback(sliderValueChangedCallback);
    add(inR1Slider);

    inL2Slider.setXY(275, 48);
    inL2Slider.setBitmaps(touchgfx::Bitmap(BITMAP_GLASS_THEME_IMAGES_WIDGETS_SLIDER_VERTICAL_THIN_TRACK_SMALL_ID), touchgfx::Bitmap(BITMAP_LIGHT_THEME_IMAGES_WIDGETS_LINEPROGRESS_FILLERS_PLAIN_THIN_SMALL_ACTION_90_ID), touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_SLIDER_VERTICAL_THIN_ROUNDED_ACTIVE_ID));
    inL2Slider.setupVerticalSlider(9, 12, 0, 0, 200);
    inL2Slider.setValueRange(0, 40);
    inL2Slider.setValue(0);
    inL2Slider.setNewValueCallback(sliderValueChangedCallback);
    add(inL2Slider);

    inR2Slider.setXY(345, 48);
    inR2Slider.setBitmaps(touchgfx::Bitmap(BITMAP_GLASS_THEME_IMAGES_WIDGETS_SLIDER_VERTICAL_THIN_TRACK_SMALL_ID), touchgfx::Bitmap(BITMAP_LIGHT_THEME_IMAGES_WIDGETS_LINEPROGRESS_FILLERS_PLAIN_THIN_SMALL_ACTION_90_ID), touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_SLIDER_VERTICAL_THIN_ROUNDED_ACTIVE_ID));
    inR2Slider.setupVerticalSlider(9, 12, 0, 0, 200);
    inR2Slider.setValueRange(0, 40);
    inR2Slider.setValue(0);
    inR2Slider.setNewValueCallback(sliderValueChangedCallback);
    add(inR2Slider);

    inL1GainText.setXY(106, 102);
    inL1GainText.setColor(touchgfx::Color::getColorFromRGB(255, 20, 220));
    inL1GainText.setLinespacing(0);
    inL1GainText.setRotation(touchgfx::TEXT_ROTATE_270);
    inL1GainText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_80FP));
    add(inL1GainText);

    inR1GainText.setXY(176, 102);
    inR1GainText.setColor(touchgfx::Color::getColorFromRGB(255, 20, 220));
    inR1GainText.setLinespacing(0);
    inR1GainText.setRotation(touchgfx::TEXT_ROTATE_270);
    inR1GainText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_3E4P));
    add(inR1GainText);

    inL2GainText.setXY(246, 102);
    inL2GainText.setColor(touchgfx::Color::getColorFromRGB(255, 20, 220));
    inL2GainText.setLinespacing(0);
    inL2GainText.setRotation(touchgfx::TEXT_ROTATE_270);
    inL2GainText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_APS6));
    add(inL2GainText);

    inR2GainText.setXY(316, 102);
    inR2GainText.setColor(touchgfx::Color::getColorFromRGB(255, 20, 220));
    inR2GainText.setLinespacing(0);
    inR2GainText.setRotation(touchgfx::TEXT_ROTATE_270);
    inR2GainText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TYJI));
    add(inR2GainText);

    nextScreenText.setXY(398, 113);
    nextScreenText.setColor(touchgfx::Color::getColorFromRGB(255, 20, 220));
    nextScreenText.setLinespacing(0);
    nextScreenText.setRotation(touchgfx::TEXT_ROTATE_270);
    nextScreenText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_V41M));
    add(nextScreenText);

    previousScreenText.setXY(64, 126);
    previousScreenText.setColor(touchgfx::Color::getColorFromRGB(255, 20, 220));
    previousScreenText.setLinespacing(0);
    previousScreenText.setRotation(touchgfx::TEXT_ROTATE_90);
    previousScreenText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_7CNT));
    add(previousScreenText);

    dbText2.setXY(124, 30);
    dbText2.setColor(touchgfx::Color::getColorFromRGB(255, 20, 220));
    dbText2.setLinespacing(0);
    dbText2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_XB3P));
    add(dbText2);

    dbText3.setXY(194, 30);
    dbText3.setColor(touchgfx::Color::getColorFromRGB(255, 20, 220));
    dbText3.setLinespacing(0);
    dbText3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VALZ));
    add(dbText3);

    dbText4.setXY(264, 30);
    dbText4.setColor(touchgfx::Color::getColorFromRGB(255, 20, 220));
    dbText4.setLinespacing(0);
    dbText4.setTypedText(touchgfx::TypedText(T___SINGLEUSE_3LTD));
    add(dbText4);

    dbText5.setXY(332, 30);
    dbText5.setColor(touchgfx::Color::getColorFromRGB(255, 20, 220));
    dbText5.setLinespacing(0);
    dbText5.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DH8Y));
    add(dbText5);

    dbText7.setXY(130, 272);
    dbText7.setColor(touchgfx::Color::getColorFromRGB(255, 20, 220));
    dbText7.setLinespacing(0);
    dbText7.setTypedText(touchgfx::TypedText(T___SINGLEUSE_RCPB));
    add(dbText7);

    dbText8.setXY(203, 272);
    dbText8.setColor(touchgfx::Color::getColorFromRGB(255, 20, 220));
    dbText8.setLinespacing(0);
    dbText8.setTypedText(touchgfx::TypedText(T___SINGLEUSE_K890));
    add(dbText8);

    dbText9.setXY(273, 272);
    dbText9.setColor(touchgfx::Color::getColorFromRGB(255, 20, 220));
    dbText9.setLinespacing(0);
    dbText9.setTypedText(touchgfx::TypedText(T___SINGLEUSE_EG45));
    add(dbText9);

    dbText10.setXY(343, 272);
    dbText10.setColor(touchgfx::Color::getColorFromRGB(255, 20, 220));
    dbText10.setLinespacing(0);
    dbText10.setTypedText(touchgfx::TypedText(T___SINGLEUSE_XWJ2));
    add(dbText10);

    nextScreenButton.setIconBitmaps(Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_ARROW_FORWARD_IOS_50_50_FF14DC_SVG_ID), Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_ARROW_FORWARD_IOS_50_50_FF14DC_SVG_ID));
    nextScreenButton.setIconXY(-1, 24);
    nextScreenButton.setAction(flexButtonCallback);
    nextScreenButton.setPosition(416, 112, 64, 97);
    add(nextScreenButton);

    previousScreenButton.setIconBitmaps(Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_ARROW_BACK_IOS_50_50_FF14DC_SVG_ID), Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_ARROW_BACK_IOS_50_50_FF14DC_SVG_ID));
    previousScreenButton.setIconXY(17, 24);
    previousScreenButton.setAction(flexButtonCallback);
    previousScreenButton.setPosition(0, 112, 64, 97);
    add(previousScreenButton);
}

Screen4ViewBase::~Screen4ViewBase()
{

}

void Screen4ViewBase::setupScreen()
{
    inL1Slider.setValue(screen4State.getInL1SliderValue());
    inR1Slider.setValue(screen4State.getInR1SliderValue());
    inL2Slider.setValue(screen4State.getInL2SliderValue());
    inR2Slider.setValue(screen4State.getInR2SliderValue());
}

void Screen4ViewBase::sliderValueChangedCallbackHandler(const touchgfx::Slider& src, int value)
{
    if (&src == &inL1Slider)
    {
        //AdjustInL1GainVariable
        //When inL1Slider value changed execute C++ code
        //Execute C++ code
        UpdatePreAmpGainFromSlider(GAIN_CH1L, std::pow(10.0f, (float)value / 20.0f));
        screen4State.setInL1SliderValue(value);
    }
    if (&src == &inR1Slider)
    {
        //AdjustInR1GainVariable
        //When inR1Slider value changed execute C++ code
        //Execute C++ code
        UpdatePreAmpGainFromSlider(GAIN_CH1R, std::pow(10.0f, (float)value / 20.0f));
        screen4State.setInR1SliderValue(value);
    }
    if (&src == &inL2Slider)
    {
        //AdjustInL2GainVariable
        //When inL2Slider value changed execute C++ code
        //Execute C++ code
        UpdatePreAmpGainFromSlider(GAIN_CH2L, std::pow(10.0f, (float)value / 20.0f));
        screen4State.setInL2SliderValue(value);
    }
    if (&src == &inR2Slider)
    {
        //AdjustInR2GainVariable
        //When inR2Slider value changed execute C++ code
        //Execute C++ code
        UpdatePreAmpGainFromSlider(GAIN_CH2R, std::pow(10.0f, (float)value / 20.0f));
        screen4State.setInR2SliderValue(value);
    }
}

void Screen4ViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &nextScreenButton)
    {
        //ChangeToScreen5
        //When nextScreenButton clicked change screen to Screen5
        //Go to Screen5 with screen transition towards East
        application().gotoScreen5ScreenWipeTransitionEast();
    }
    if (&src == &previousScreenButton)
    {
        //ChangeToScreen3
        //When previousScreenButton clicked change screen to Screen3
        //Go to Screen3 with screen transition towards West
        application().gotoScreen3ScreenWipeTransitionWest();
    }
}
