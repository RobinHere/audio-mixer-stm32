/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screen_screen/screenViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

screenViewBase::screenViewBase() :
    sliderValueChangedCallback(this, &screenViewBase::sliderValueChangedCallbackHandler)
{
    __background.setPosition(0, 0, 480, 320);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    box1.setPosition(0, 0, 480, 320);
    box1.setColor(touchgfx::Color::getColorFromRGB(48, 73, 112));
    add(box1);

    output_slider.setXY(40, 44);
    output_slider.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SLIDER_VERTICAL_THICK_TRACK_SMALL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SLIDER_VERTICAL_THICK_FILLER_SMALL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SLIDER_VERTICAL_THICK_ROUNDED_DARK_ID));
    output_slider.setupVerticalSlider(11, 16, 0, 0, 200);
    output_slider.setValueRange(-20, 20);
    output_slider.setValue(0);
    output_slider.setNewValueCallback(sliderValueChangedCallback);
    add(output_slider);

    in_l1_slider.setXY(120, 44);
    in_l1_slider.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SLIDER_VERTICAL_THICK_TRACK_SMALL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SLIDER_VERTICAL_THICK_FILLER_SMALL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SLIDER_VERTICAL_THICK_ROUNDED_DARK_ID));
    in_l1_slider.setupVerticalSlider(11, 16, 0, 0, 200);
    in_l1_slider.setValueRange(-20, 20);
    in_l1_slider.setValue(0);
    in_l1_slider.setNewValueCallback(sliderValueChangedCallback);
    add(in_l1_slider);

    in_r1_slider.setXY(200, 44);
    in_r1_slider.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SLIDER_VERTICAL_THICK_TRACK_SMALL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SLIDER_VERTICAL_THICK_FILLER_SMALL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SLIDER_VERTICAL_THICK_ROUNDED_DARK_ID));
    in_r1_slider.setupVerticalSlider(11, 16, 0, 0, 200);
    in_r1_slider.setValueRange(-20, 20);
    in_r1_slider.setValue(0);
    in_r1_slider.setNewValueCallback(sliderValueChangedCallback);
    add(in_r1_slider);

    in_l2_slider.setXY(280, 44);
    in_l2_slider.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SLIDER_VERTICAL_THICK_TRACK_SMALL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SLIDER_VERTICAL_THICK_FILLER_SMALL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SLIDER_VERTICAL_THICK_ROUNDED_DARK_ID));
    in_l2_slider.setupVerticalSlider(11, 16, 0, 0, 200);
    in_l2_slider.setValueRange(-20, 20);
    in_l2_slider.setValue(0);
    in_l2_slider.setNewValueCallback(sliderValueChangedCallback);
    add(in_l2_slider);

    in_r2_slider.setXY(360, 44);
    in_r2_slider.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SLIDER_VERTICAL_THICK_TRACK_SMALL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SLIDER_VERTICAL_THICK_FILLER_SMALL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SLIDER_VERTICAL_THICK_ROUNDED_DARK_ID));
    in_r2_slider.setupVerticalSlider(11, 16, 0, 0, 200);
    in_r2_slider.setValueRange(-20, 20);
    in_r2_slider.setValue(0);
    in_r2_slider.setNewValueCallback(sliderValueChangedCallback);
    add(in_r2_slider);

    dB1.setXY(30, 24);
    dB1.setColor(touchgfx::Color::getColorFromRGB(2, 146, 230));
    dB1.setLinespacing(0);
    dB1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_QQQB));
    add(dB1);

    dB2.setXY(110, 24);
    dB2.setColor(touchgfx::Color::getColorFromRGB(2, 146, 230));
    dB2.setLinespacing(0);
    dB2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_QZCV));
    add(dB2);

    dB3.setXY(190, 24);
    dB3.setColor(touchgfx::Color::getColorFromRGB(2, 146, 230));
    dB3.setLinespacing(0);
    dB3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_WZZN));
    add(dB3);

    dB4.setXY(270, 24);
    dB4.setColor(touchgfx::Color::getColorFromRGB(2, 146, 230));
    dB4.setLinespacing(0);
    dB4.setTypedText(touchgfx::TypedText(T___SINGLEUSE_R650));
    add(dB4);

    dB5.setXY(350, 24);
    dB5.setColor(touchgfx::Color::getColorFromRGB(2, 146, 230));
    dB5.setLinespacing(0);
    dB5.setTypedText(touchgfx::TypedText(T___SINGLEUSE_JXEU));
    add(dB5);

    dB6.setXY(26, 276);
    dB6.setColor(touchgfx::Color::getColorFromRGB(2, 146, 230));
    dB6.setLinespacing(0);
    dB6.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q9MG));
    add(dB6);

    dB7.setXY(106, 276);
    dB7.setColor(touchgfx::Color::getColorFromRGB(2, 146, 230));
    dB7.setLinespacing(0);
    dB7.setTypedText(touchgfx::TypedText(T___SINGLEUSE_4FYJ));
    add(dB7);

    dB8.setXY(181, 276);
    dB8.setColor(touchgfx::Color::getColorFromRGB(2, 146, 230));
    dB8.setLinespacing(0);
    dB8.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DN7T));
    add(dB8);

    db10.setXY(266, 276);
    db10.setColor(touchgfx::Color::getColorFromRGB(2, 146, 230));
    db10.setLinespacing(0);
    db10.setTypedText(touchgfx::TypedText(T___SINGLEUSE_O4EA));
    add(db10);

    dB11.setXY(346, 276);
    dB11.setColor(touchgfx::Color::getColorFromRGB(2, 146, 230));
    dB11.setLinespacing(0);
    dB11.setTypedText(touchgfx::TypedText(T___SINGLEUSE_JZIM));
    add(dB11);

    out_gain.setXY(10, 115);
    out_gain.setColor(touchgfx::Color::getColorFromRGB(2, 146, 230));
    out_gain.setLinespacing(0);
    out_gain.setRotation(touchgfx::TEXT_ROTATE_270);
    out_gain.setTypedText(touchgfx::TypedText(T___SINGLEUSE_4Q4T));
    add(out_gain);

    ch1_gain.setXY(90, 83);
    ch1_gain.setColor(touchgfx::Color::getColorFromRGB(2, 146, 230));
    ch1_gain.setLinespacing(0);
    ch1_gain.setRotation(touchgfx::TEXT_ROTATE_270);
    ch1_gain.setTypedText(touchgfx::TypedText(T___SINGLEUSE_7G36));
    add(ch1_gain);

    ch2_gain.setXY(170, 83);
    ch2_gain.setColor(touchgfx::Color::getColorFromRGB(2, 146, 230));
    ch2_gain.setLinespacing(0);
    ch2_gain.setRotation(touchgfx::TEXT_ROTATE_270);
    ch2_gain.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FR58));
    add(ch2_gain);

    ch3_gain.setXY(250, 83);
    ch3_gain.setColor(touchgfx::Color::getColorFromRGB(2, 146, 230));
    ch3_gain.setLinespacing(0);
    ch3_gain.setRotation(touchgfx::TEXT_ROTATE_270);
    ch3_gain.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9I2K));
    add(ch3_gain);

    ch4_gain.setXY(330, 83);
    ch4_gain.setColor(touchgfx::Color::getColorFromRGB(2, 146, 230));
    ch4_gain.setLinespacing(0);
    ch4_gain.setRotation(touchgfx::TEXT_ROTATE_270);
    ch4_gain.setTypedText(touchgfx::TypedText(T___SINGLEUSE_IOGG));
    add(ch4_gain);
}

screenViewBase::~screenViewBase()
{

}

void screenViewBase::setupScreen()
{

}

void screenViewBase::sliderValueChangedCallbackHandler(const touchgfx::Slider& src, int value)
{
    if (&src == &output_slider)
    {
        //AdjustOutGain
        //When output_slider value changed execute C++ code
        //Execute C++ code
        UpdateGainFromSlider(GAIN_OUTPUT, (int8_t)value);
    }
    if (&src == &in_l1_slider)
    {
        //AdjustChannel1LeftGain
        //When in_l1_slider value changed execute C++ code
        //Execute C++ code
        UpdateGainFromSlider(GAIN_CH1L, (int8_t)value);
    }
    if (&src == &in_r1_slider)
    {
        //AdjustChannel1RightGain
        //When in_r1_slider value changed execute C++ code
        //Execute C++ code
        UpdateGainFromSlider(GAIN_CH1R, (int8_t)value);
    }
    if (&src == &in_l2_slider)
    {
        //AdjustChannel2LeftGain
        //When in_l2_slider value changed execute C++ code
        //Execute C++ code
        UpdateGainFromSlider(GAIN_CH2L, (int8_t)value);
    }
    if (&src == &in_r2_slider)
    {
        //AdjustChannel2RightGain
        //When in_r2_slider value changed execute C++ code
        //Execute C++ code
        UpdateGainFromSlider(GAIN_CH2R, (int8_t)value);
    }
}
