/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef SCREEN3VIEWBASE_HPP
#define SCREEN3VIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/screen3_screen/Screen3Presenter.hpp>
#include "Screen3State.hpp"
#include "audio_module.h"
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/ScalableImage.hpp>
#include <touchgfx/containers/Slider.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>
#include <touchgfx/widgets/TextArea.hpp>

class Screen3ViewBase : public touchgfx::View<Screen3Presenter>
{
public:
    Screen3ViewBase();
    virtual ~Screen3ViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::ScalableImage scalableImage1;
    touchgfx::Slider midSlider;
    touchgfx::Slider lowSlider;
    touchgfx::Slider highSlider;
    touchgfx::IconButtonStyle< touchgfx::ClickButtonTrigger >  previousScreenButton;
    touchgfx::TextArea previousScreenText;
    touchgfx::TextArea previousScreenText_1;
    touchgfx::IconButtonStyle< touchgfx::ClickButtonTrigger >  nextScreenButton;
    touchgfx::TextArea dTimeText;
    touchgfx::TextArea dTimeText_2;
    touchgfx::TextArea dTimeText_1;
    touchgfx::TextArea dbText1;
    touchgfx::TextArea dbText1_2;
    touchgfx::TextArea dbText1_2_1;
    touchgfx::TextArea dbText1_1;
    touchgfx::TextArea dbText1_1_1;
    touchgfx::TextArea dbText1_1_1_1;
    Screen3State& screen3State = Screen3State::getInstance();

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<Screen3ViewBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;
    touchgfx::Callback<Screen3ViewBase, const touchgfx::Slider&, int> sliderValueChangedCallback;

    /*
     * Callback Handler Declarations
     */
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);
    void sliderValueChangedCallbackHandler(const touchgfx::Slider& src, int value);

};

#endif // SCREEN3VIEWBASE_HPP
